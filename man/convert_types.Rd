% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_types.R
\name{convert_types}
\alias{convert_types}
\title{Convert Column Types in a Data Frame}
\usage{
convert_types(
  data,
  type_map = NULL,
  pattern_map = NULL,
  default_date_format = "\%Y-\%m-\%d",
  quiet = FALSE
)
}
\arguments{
\item{data}{A data frame or tibble.}

\item{type_map}{A named list or named character vector; names are columns, values are types (or a list with elements 'type' and optionally 'format' for dates).
Example: \code{list(age = "numeric", bday = list(type = "date", format = "\%d/\%m/\%Y"))}
Default: NULL (no per-column conversion).}

\item{pattern_map}{Convert all columns currently of a given type to a new type. Example: \code{list(character = "factor")}}

\item{default_date_format}{Default date format string if not specified for a "date" type column (default \code{"\%Y-\%m-\%d"}).}

\item{quiet}{Logical. If TRUE, minimizes output and warnings.}
}
\value{
A tibble; conversion summary is attached as the "type_conversion_summary" attribute.
}
\description{
Converts columns of a data frame to target types. Specify columns with a named map,
or provide a pattern to convert all columns of a given current type (e.g., all character columns to factor).
Supports "numeric", "integer", "character", "factor", "logical", and "date" (with format).
Warns if conversion introduces new \code{NA} values. Returns a tibble with conversion summary as an attribute.
}
\examples{
df <- data.frame(
  age = c("20", "21", "22"),
  gender = c("M", "F", "F"),
  enrolled = c("TRUE", "FALSE", NA),
  when = c("2022-01-01", "2022-02-15", "NA")
)
# 1. Per-column
convert_types(df, type_map = list(age = "numeric", enrolled = "logical", when = list(type = "date")))
# 2. By pattern: all character to factor
convert_types(df, pattern_map = list(character = "factor"))

}
